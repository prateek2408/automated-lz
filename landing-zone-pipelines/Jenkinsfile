/**
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

pipeline {
  agent {
      label "terraform-exec"
  }
  parameters {
    string(name: 'org_id',               description: 'The Organization ID for GCP')
    string(name: 'billing_account',      description: 'The Billing Account for GCP')
    string(name: 'group_org_admins',     description: 'The Group Organization Admins for GCP')
    string(name: 'group_billing_admins', description: 'The Group Billing Admins for GCP')
    string(name: 'default_region',       description: 'The Default Region for GCP')
  }
  environment {
    TF_VAR_org_id               = "${param.org_id}"
    TF_VAR_billing_account      = "${param.billing_account}"
    TF_VAR_group_org_admins     = "${param.group_org_admins}"
    TF_VAR_group_billing_admins = "${param.group_billing_admins}"
    TF_VAR_default_region       = "${param.default_region}"
  }
  stages {
    // [START tf-init, tf-validate]
    stage('TF init & validate') {
      when { anyOf {branch "prod";branch "dev";changeRequest() } }
      steps {
        container('terraform') {
          sh '''
	  echo ""
	  echo "*************** TERRAFOM INIT and VALIDATE ******************"
	  echo "******* At environment: ${env} ********"
	  echo "*************************************************"
          lzStage=`echo $JOB_NAME|cut -d / -f 1`
          cd landing-zone-pipelines/$lzStage
	  terraform init || exit 1
	  terraform validate || exit 1
          cd -'''
      }
     }
    }
    // [END tf-init, tf-validate]

    // [START tf-plan]
    stage('TF plan') {
      when { anyOf {branch "prod";branch "dev";changeRequest() } }
      steps {
        container('terraform') {
          sh '''
	  echo ""
	  echo "*************** TERRAFOM PLAN******************"
	  echo "******* At environment: ${env} ********"
	  echo "*************************************************"
          lzStage=`echo $JOB_NAME|cut -d / -f 1`
          cd landing-zone-pipelines/$lzStage
	  terraform plan || exit 1
          cd -'''
        }
      }
    }
    // [END tf-plan]

    // [START tf-apply]
    stage('TF Apply') {
      when { anyOf {branch "prod";branch "dev" } }
      steps {
        container('terraform') {
          sh '''
	  echo ""
	  echo "*************** TERRAFOM APPLY******************"
	  echo "******* At environment: ${env} ********"
	  echo "*************************************************"
          lzStage=`echo $JOB_NAME|cut -d / -f 1`
          cd landing-zone-pipelines/$lzStage
	  terraform apply || exit 1
          cd -'''
      }
    }
  }
  // [END tf-apply]
 }
}
